buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = "${System.env.VERSION}"
group = 'snownee.jade'
archivesBaseName = 'amber'

if (System.getenv().BUILD_NUMBER != null) {
    // Maven version scheme uses dot to separate things
    version += ".${System.getenv().BUILD_NUMBER}"
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20210309-1.16.5'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', ''

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                amber {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', ''

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                amber {
                    source sourceSets.main
                }
            }
        }
    }
}

task apiJar(type: Jar) {
    classifier = 'api'
    include 'mcp/mobius/waila/api/**/*'
    exclude 'mcp/mobius/waila/api/impl/**/*'
    from sourceSets.main.allSource
    from sourceSets.main.output
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output)
    archiveName = "${archivesBaseName}-${version}-deobf.${extension}"
}

repositories {
    maven { // JEI
        url = "https://maven.blamejared.com/"
    }
    maven {
        url = "https://www.cursemaven.com"
    }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.153:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.153")

    implementation fg.deobf("curse.maven:lollipop-347954:3232534")
    implementation fg.deobf("curse.maven:powah-352656:3232535")

    implementation fg.deobf("curse.maven:mcjtylib-233105:3848282")
    implementation fg.deobf("curse.maven:rftoolsbase-326041:3825685")
    implementation fg.deobf("curse.maven:rftoolspower-290209:3783989")

    implementation fg.deobf("curse.maven:titanium-287342:3525770")
    implementation fg.deobf("curse.maven:if-266515:3525789")
    implementation fg.deobf("curse.maven:ie-231951:3809596")

    implementation fg.deobf("curse.maven:mekanism-268560:3659389")
    implementation fg.deobf("appeng:appliedenergistics2:8.4.7")

    implementation fg.deobf("curse.maven:flywheel-486392:3535459")
    implementation fg.deobf("curse.maven:create-328085:3536025")
    
    implementation fg.deobf("curse.maven:farmersdelight-398521:3765350")
    implementation fg.deobf("curse.maven:dynamictrees-252818:4457951")
	
	//compile fg.deobf("curse.maven:hwyla:3033593")f3
	//compile files("Hwyla-1.10.8-B72_1.15.2.jar")
    //compile fg.deobf("mcp.mobius.waila:Hwyla:forge-1.10.9-B76_1.16.1")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
